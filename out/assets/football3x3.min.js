
function author(){ return "/*! project.js v1.0.0 | SE7ENSKY frontend studio <hello@se7ensky.com> */" }

function waitUntilFnThenFn(fn1,fn2){if(fn1()){fn2()}else{setTimeout(function(){waitUntilFnThenFn(fn1,fn2)},50)}}

(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $.fn.mod = function(name, value) {
    if (value == null) {
      value = true;
    }
    return this.each(function() {
      var $el, blockName, classAttr, toAdd, toRemove;
      $el = $(this);
      classAttr = $el.attr("class");
      blockName = classAttr.split(" ")[0];
      toRemove = classAttr.match(new RegExp("" + blockName + "_" + name + "\\S*", "g"));
      toAdd = null;
      if (value) {
        toAdd = "" + blockName + "_" + name;
        if (value !== true) {
          toAdd += "_" + value;
        }
        if (toRemove && __indexOf.call(toRemove, toAdd) >= 0) {
          toRemove.splice(toRemove.indexOf(toAdd), 1);
        }
      }
      if (toRemove && toRemove.length > 0) {
        $el.removeClass(toRemove.join(" "));
      }
      if (toAdd) {
        $el.addClass(toAdd);
      }
      return $el.trigger("mod", [name, value]);
    });
  };

  $.block = function(name) {
    return $("." + name);
  };

  $.fn.block = function(name) {
    return this.find("." + name);
  };

  $.fn.element = function(name) {
    var blockName, classAttr;
    classAttr = this.attr("class");
    blockName = classAttr.split(" ")[0];
    return this.find("." + blockName + "__" + name);
  };

}).call(this);



(function() {
  $.modal = function(opts) {
    var $bg, $close, $header, $modal, close, key, open, value, _ref;
    $modal = $("<div class=\"modal\" tabindex=\"-1\"></div>");
    if (opts.mods) {
      _ref = opts.mods;
      for (key in _ref) {
        value = _ref[key];
        $modal.mod(key, value);
      }
    }
    $modal.append($bg = $("<div class=\"modal__bg\"></div>"));
    $modal.append($header = $("<div class=\"modal__header wrap\"></div>"));
    $header.append($close = $("<div class=\"modal__close\"><span>Вернуться</span></div>"));
    if (opts.title) {
      $header.append($("<div class=\"modal__title\"></div>").text(opts.title));
    }
    if (opts.icon) {
      $header.append($("<div class=\"modal__icon modal__icon_" + opts.icon + "\"></div>"));
    }
    if (opts.content) {
      $modal.append($("<div class=\"modal__content wrap\"></div>").append(opts.content));
    }
    open = function() {
      $("body").append($modal);
      return setTimeout(function() {
        $modal.mod("state", "opening");
        return setTimeout(function() {
          return $modal.mod("state", "opened");
        }, 500);
      }, 1);
    };
    close = function() {
      if (!$modal) {
        return;
      }
      $modal.mod("state", "closing");
      $(document).trigger("modal.closing", [$modal]);
      return setTimeout(function() {
        if (!$modal) {
          return;
        }
        $modal.remove();
        $(document).trigger("modal.closed", [$modal]);
        return $modal = null;
      }, 500);
    };
    $modal.on("modal.close", close);
    $close.click(close);
    return open();
  };

}).call(this);


(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  if (!(__indexOf.call(window, 'ontouchstart') >= 0 || window.DocumentTouch && document instanceof DocumentTouch)) {
    $("a[href^='tel:']").each(function() {
      return $(this).attr('href', $(this).attr('href').replace('tel:', 'callto:'));
    });
  }

}).call(this);

